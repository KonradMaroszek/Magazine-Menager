package ServerClientFTP;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

import javax.swing.DefaultListModel;
import javax.swing.JList;

public class WaitForClientsThread extends Thread{

	private ServerSocket sock;
	private JList<String> connectionsList;
	private ArrayList<String> nick_names;
	public WaitForClientsThread(ServerSocket sock, JList<String> connections)
	{
		nick_names = new ArrayList<String>();
		this.connectionsList = connections;
		this.sock = sock;
	}
	public void run()
	{
		while(true)
		{
			
			try {
				//Waits for connetion from client
				Socket s = sock.accept();
				ExecutorService executor = Executors.newFixedThreadPool(1);
				// Asks client for nickname.
				Future<String> result = executor.submit(new AssignNickname(s));
				String nick = result.get();
				DefaultListModel<String> model = (DefaultListModel<String>) connectionsList.getModel();
				model.addElement(nick);
				nick_names.add(nick);
				connectionsList.setModel(model);
				// Starts thread for client
				(new NewConnectionThread(s, nick)).start();
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (ExecutionException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (Exception exc) {
				// TODO Auto-generated catch block
				System.out.println("Wrong nickname.");
			}	
			
		}
	}
}
